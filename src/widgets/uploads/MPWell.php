<?php
namespace kordar\yak\widgets\uploads;

use kordar\yak\assets\ace\plugins\tools\BootboxAsset;
use yii\helpers\Html;
use yii\widgets\InputWidget;

/**
 * Class Well
 * @package kordar\yak\widgets\uploads
 * @item *:Well
 */
class MPWell extends InputWidget
{
    /**
     * @var string
     * Url
     */
    public $uploadUrl = '';

    /**
     * @var string
     * Title
     */
    public $title = 'Title';

    /**
     * @var string
     */
    public $fileName = 'file';

    /**
     * @var string
     */
    public $width = '120px';

    /**
     * @var string
     */
    public $deleteUrl = '';

    /**
     * @var
     */
    public $type;

    public function init()
    {
//        parent::init(); // TODO: Change the autogenerated stub
//        \kordar\yak\assets\BootstrapFileInputAsset::register($this->view);
//        BootboxAsset::register($this->view);
//        echo Html::activeInput('file', $this->model, $this->attribute, [
//            'id' => $this->id, 'name' => $this->fileName,
//            'data-show-upload' => "false", 'data-theme' => "fa",
//            'data-overwrite-initial'=>"false", 'data-browse-on-zone-click'=>"true"
//        ]);
//        echo Html::activeHiddenInput($this->model, $this->mediaId,  ['id' => $this->id . '-id']);
//        echo Html::activeHiddenInput($this->model, $this->mediaUrl, ['id' => $this->id . '-url']);
//        echo Html::activeHiddenInput($this->model, $this->mediaSize, ['id' => $this->id . '-size']);
//        echo '<br>';
//        echo Html::activeDropDownList($this->model, $this->mediaType, $this->typeList, [
//            'id' => $this->id . '-type', 'class' => 'form-control']);
//        echo '<br>';
//
//        echo Html::activeInput('text', $this->model, $this->mediaTitle, [
//            'id' => $this->id . '-title', 'class' => 'form-control', 'placeholder' => '描述']);
//        echo '<br>';
//        echo Html::activeTextarea($this->model, $this->mediaIntroduction, [
//            'id' => $this->id . '-desc', 'class' => 'form-control', 'placeholder' => '详情', 'rows' => 5]);
    }

    public function run()
    {
        return $this->render("mp-{$this->type}-well", [
            'model' => $this->model, 'id' => $this->id, 'attribute' => $this->attribute, 'uploadUrl' => $this->uploadUrl,
            'filename' => $this->fileName, 'deleteUrl' => $this->deleteUrl, 'width' => $this->width
        ]);
        /*$removeBtnId = $this->id . '-remove';
        $removeBtn = Html::button('<i class="glyphicon glyphicon-trash"></i>', [
            'type' => 'button', 'id' => $removeBtnId,
            'class' => 'btn btn-sm btn-default btn-outline-secondary',
        ]);*/
//
//        $key = $this->mediaId;
//
//        $allowedExt = json_encode($this->allowedExt);
//
//        $js = <<<JS
//            $('#{$this->id}').fileinput({
//                theme: 'fa',
//                language: 'zh',
////                showClose : false,      //显示右上角X关闭
////                showRemove : false,     //显示移除按钮,跟随文本框的那个
////                showUpload : false,     //是否显示上传后的按钮
//               showBrowse : false,     //是否显示上传前的上传按钮
//               showCaption: false,
////
////                fileType: "any",
////                previewFileIcon: "<i class='glyphicon glyphicon-king'></i>",
////                overwriteInitial: false,
////                initialPreviewAsData: true,
////                initialPreview: [
////                    "{$this->value}",
////                ],
////                initialPreviewConfig: [
////                    {caption: "{$this->title}", size: "{$this->size}", width: "{$this->width}", url: "{$this->deleteUrl}", key: "{$this->model->$key}"}
////                ],
////                uploadExtraData: function () {
////                    type = $('#{$this->id}-type').val();
////                    title = $('#{$this->id}-title').val();
////                    desc = $('#{$this->id}-desc').val();
////                    return {'type': type, 'title': title, 'desc': desc};
////                }
//                // layoutTemplates : {
//                //    // actionDelete:'',
//                // },
//            }).on('fileuploaded', function(event, data, previewId, index) {
//                if (data.response.status === 'success') {
//                    $('#{$this->id}-id').val(data.response.mediaId);
//                    $('#{$this->id}-url').val(data.response.mediaUrl);
//                    $('#{$this->id}-size').val(data.response.mediaSize);
//                } else {
//                    bootbox.alert(data.response.message);
//                }
//             }).on("filebatchselected", function(event, files) {
//                 // $(this).fileinput("upload");
//             });
//
//
//
//            $("#fileinput").click(function () {
//
//                $('.file-drop-zone.clickable').trigger("click");
//            });
//JS;
//
//        echo '<button type="button" id="fileinput">AAA</button>';
//
//        $this->view->registerJs($js);
    }
}